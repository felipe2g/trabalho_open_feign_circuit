spring:
  application:
    name: eureka-client-software-house
  data:
    mongodb:
      port: 27017
      host: localhost
      database: myCompany
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# Configuracao da porta do servi√ßo de forma aleatoria
server:
  port: ${PORT:0}

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

# RabbitMQ - Variaveis de ambiente customizadas
softwareHouse:
  rabbitmq:
    exchange: softwareHouse.exchange
    rountingkey: softwareHouse.employee.routingkey
    queue: softwareHouse.queue

# Mostrar Queries MongoDB no Terminal:
logging:
  level:
    org:
      springframework:
        data:
          mongodb:
            core:
              MongoTemplate: DEBUG

              management:
                endpoint:
                  health:
                    show-details: always
                health:
                  circuitbreakers:
                    enabled: true
                  retries:
                    enabled: true

management:
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
resilience4j:
  circuitbreaker:
    instances:
      consumer:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
#  retry:
#    instances:
#      consumer:
#        maxRetryAttempts: 5
#        waitDuration: 5s